name: CI

on:
    push:
        branches: ["**"]

permissions:
    checks: write
    pull-requests: write

jobs:
    setup:
        name: Setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/setup-gradle

            - name: Warm Gradle Cache
              working-directory: backend
              run: |
                  chmod +x ./gradlew
                  ./gradlew help --no-daemon

    unit-tests:
        name: "${{ matrix.module }} - Unit Tests"
        runs-on: ubuntu-latest
        needs: setup
        strategy:
            fail-fast: false
            matrix:
                module: [shared, auth, api]
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/run-gradle-task
              with:
                  task: ":${{ matrix.module }}:test"
                  parallel: false

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.module }}-unit-tests
                  path: backend/${{ matrix.module }}/build/test-results/test/**/*.xml
                  retention-days: 1

    integration-tests:
        name: "${{ matrix.module }} - Integration Tests"
        runs-on: ubuntu-latest
        needs: [setup]
        strategy:
            fail-fast: false
            matrix:
                module: [auth, api]
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/run-gradle-task
              with:
                  task: ":${{ matrix.module }}:testIntegration"
                  parallel: false

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.module }}-integration-tests
                  path: backend/${{ matrix.module }}/build/test-results/testIntegration/**/*.xml
                  retention-days: 1

    report-tests:
        name: Combined Tests
        runs-on: ubuntu-latest
        needs: [unit-tests, integration-tests]
        if: always()
        steps:
            - name: Download all test results
              uses: actions/download-artifact@v4
              with:
                  path: test-results

            - name: Publish Combined Test Results
              if: always()
              uses: EnricoMi/publish-unit-test-result-action@v2
              with:
                  files: test-results/**/*.xml
                  check_name: "All Test Results"